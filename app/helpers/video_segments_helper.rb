module VideoSegmentsHelper

  def video_segment_thumbnail_html video_segment, args = {}
    args[:class] ||= []
    args[:class] = args[:class].join(' ') if args[:class].is_a? Array
    args = args.merge({
      :class => "video-segment-thumbnail #{args[:class]}",
      :alt => (video_segment.nil? ? nil : video_segment.name),
      :width => args[:width],
      :height => args[:height],
      :crop => :center})
    thumbnail = video_segment.thumbnail || video_segment.video.thumbnail
    if args[:dynamic] || nil
      dynamic_thumbnail_html thumbnail, args
    else
      thumbnail_html thumbnail, args
    end
  end
  safe_helper :video_segment_thumbnail_html

  # Not auto-generated by routes since we are pointing to a video
  def video_segment_video_path segment, options = {}
    video_segment_video_url(segment, options)
  end

  def video_segment_video_url segment, options = {}
    video_id = segment.video.permalink.nil? ? segment.video.id : segment.video.permalink
    options = options.merge({:id => video_id})
    if segment.start_time == 0
      video_path(options)
    else
      video_with_start_time_path(options.merge(:start => segment.start_time))
    end
  end

end
